#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## File:          $HOME/.gnupg/gpg-agent.conf - TEMPLATE
## Created:       2017-004-10 
## Modified:      2022-001-18
## Author:        Alisha Awen - Siren1disroot.org
## Copyright:     (© 2019 - 2022 by Alisha Awen, Siren1@disroot.org, all rights reserved)
## GitHub User:   harmonicalchemy
## Ref:           https://www.gnupg.org/software/index.html
## Repo:          https://github.com/harmonicalchemy/dotfiles.git
## Licence:       GNU General Public License v3.0
## Environment:   GnuPG Version 2 on any machine that supports it...

##               **** IMPORTANT SECURITY NOTE Q4-2019! ****
##
##    Dont use GPG < V2.2 anymore...  When it comes to security
##    all software needs to be as up to date as possible.  That rule applies
##    most importantly to any security related software!  Stay up to date!
##    Don't listen to anyone who says you can still be secure with older 
##    versions... Maybe you can, but why take such a cheap risk?
##    That is my advise... After saying that, I believe Harmonic Alchemy DOTFILES
##    will still work with GnuPG v2.1.11 and later... However, if you can upgrade
##    with out too much pain, I strongly recommend it!  You hvae been warned...

## This file represents my current best practice configuration for GnuPG,
## V2 (including recommended default settings already set without this file)
## Use this as a template for any machines or VMs you configure with GPG2.

## This config file contains standard gpg-agent configuration directives used
## by a running gpg-agent. You may add any valid long option here on a blank
## line...  Command line abbreviations or the leading dashes are not allowed
## within the config files...

## Simply add your directive on a blank line like this with no leading dashes:
##
##        your-desired-gpg-directive directive-setting

###
## NOTE1: All options below are for GnuPG v2.1.11 and later and may not
##        work with earlier versions!
##
## NOTE2: This file is also read after a SIGHUP however only a few options will
##        actually have an effect.
##
## NOTE3: This file is to be used as a template for you to study and implement
##        within you own computing environments.  Some options listed below are
##        actually the default for GnuPG after v2.1.11 and don't need to be
##        duplicated here. I have added those directives below disabled
##        (commented out) for pedagogical purposes and added helpful comments
##        (exerpts from the manual) to give you a synopsis of what they are for.
##        Also there are notes below about settings that should never be set! 
##        This can help tremendusly later when you are digging through this code
##        worried about some security issue being discussed within a sea of
##        Reddit or Stack Overflow posts that may caused concern about something
##        you had long forgotten the details about.  Right from within this file
##        (which is probably the first place you would look, you can find the
##        item and then jump to the official docs, and release notes for
##        conformation.  It's also wize to keep up with the expert infoSec blog
##        posts as well.  Study expert hackers (i.e., DEF CON) especially if you
##        are brave enough to learn those geeky things!  Be informed!

###
## Change Log: (descending chronological order)

## 2022-001-18 - Alisha Awen - siren1@disroot.org
##     Minor changes to comments, formatting, etc...
##     Updated this public DOTFILES version from latest Private DOTFILES version. 
##     Security DueDiligence done up to Q4 2021 now...

##   2020-002-02 - Alisha Awen - siren1@disroot.org
##      Refreshed this file from changes made to my private .DOTFILES repo
##      Security DueDiligence up to Q1 2020 now...

##    2019-011-09 - Alisha Awen - siren1@disroot.org
##      Reviewed, and updated this file for posible security changes since the
##      beginning of 2019, in prep for Harmonic Alchemy DOTFILES V2.0 Q4-2019.

##   2019-003-17 - Alisha Awen - siren1@disroot.org
##     GnuPG V2.2 has been out for a while.  I am double checking all my
##     settings below to see if there are any new (more secure) methods to use...

##   2018-004-20 - Alisha Awen - siren1@disroot.org
##     Prepaired for public use - generic
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
## Which Pin Entry Program to use?
## (the enabled setting below is the generic console option)
## The default for this setting is installation dependent. The default
## configuration name of the default pinentry is "pinentry"...
## If that file does not exist but a pinentry-basic exists, the latter is used instead. 
## For other unix flavors, you will have to search for the best option and install it.
## Once you have the path location of your particular pinentry app flavor, adjust
## the line below so that gpg-agent knows how to find it...
## There are many alternates to the standard pinentry "console based" program...
## it is out of scope to suggest or recommend options, you can check GnuPG for
## recommendations, and also from companies that make them... Some are quite fancy
## for a simple program that asks only for your password... %^) Security wise, I
## prefer simple command line which has a much smaller "attack surface"...

## Use Console for Pin Entry (change this one if you have another) this is default
## and is not even needed to be specified here actually.

pinentry-program /usr/local/bin/pinentry

###
## Keep the display information in memory...  This option directs gpg-agent to
## ignore requests to change the current tty or X window system’s DISPLAY variable
## respectively.  This prevents gpg from occasionally failing with “file not found”
## errors by locking the pinentry to pop up at the tty or display where you started
## the agent.

keep-display

###
## Include an extra socket for remote gpg-agent SSH forwarding...
## This directive instructs gpg to also listen on native gpg-agent connections on the
## given socket. This is for a setup where a Unix domain socket forwarding from a remote
## machine to this socket on the local machine.  A gpg running on the remote machine may
## then connect to the local gpg-agent and use its private keys. This allows to decrypt
## or sign data on a remote machine without exposing the private keys to the remote machine. 

#extra-socket ~/.gnupg/S.gpg-agent.remote

###
## Set the time a cache entry is valid to n seconds...
## The default is 600 seconds. Each time a cache entry is accessed, the entry’s timer is reset.
## To set an entry’s maximum lifetime, use max-cache-ttl.

#default-cache-ttl 600

###
## Set the maximum time a cache entry is valid to n seconds...
## After this time a cache entry will be expired even if it has been accessed recently
## or has been set using gpg-preset-passphrase. The default is 2 hours (7200 seconds). 

#max-cache-ttl 7200

###
## Set the time a cache entry used for SSH keys is valid to n seconds...
## The default is 1800 seconds. Each time a cache entry is accessed, the entry’s timer is reset.
## To set an entry’s maximum lifetime, use max-cache-ttl-ssh.

#default-cache-ttl-ssh 1800

###
## Set the maximum time a cache entry used for SSH keys is valid to n seconds...
## After this time a cache entry will be expired even if it has been accessed recently or has
## been set using gpg-preset-passphrase. The default is 2 hours (7200 seconds).

#max-cache-ttl-ssh 7200

###
## This option allows the use of gpg-preset-passphrase to seed the internal cache of
## gpg-agent with passphrases.

allow-preset-passphrase

####
## FYI - The rest below to end-of-file are Outdated Options as of v2.1.11
##       Never Enable any of these settings! (unless you use GnuPG before v2.1.11
##       but in that case none of these config files may work!!!  Don't use old GnuPG!)
##       If you read about setting any of the options below on a forum or in a doc,
##       don't believe it!  That forum post, or doc is way old!  Forget it...
##       Believe this instead! I put this in here mostly as note-to-self. ;-)
##
##  write-env-file
##
##       Since GnuPG 2.1 the standard socket is always used, therefore the option below
##       has no effect.
##
##  use-standard-socket
####

## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## END: $HOME/.gnupg/gpg-agent.conf - TEMPLATE
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
