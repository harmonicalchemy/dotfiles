## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  File:          [Qubes-App-VM]:$HOME/.gnupg/gpg.conf - TEMPLATE
#  Created:       2017-004-10 
#  Version:       V1.0 RC2  [Q1-2019]
#  Author:        Alisha Awen Sheppard - Siren1@disroot.org
#  Git Username:  harmonicalchemy
#  Ref:           https://www.gnupg.org/software/index.html
#  Repo:          Github.com:harmonicalchemy/dotfiles.git
#  Environment:   GnuPG Version 2 within a Qubes Split GPG Front End AppVM...
#  Reference:     https://www.qubes-os.org/doc/split-gpg/ (instructions here)
#
#  This gpg.conf file runs within the Qubes Split GPG front end which is a 
#  network emabled App VM that gets its internet access through another
#  Service VM called: [sys-firewall].  The Qubes back-end Valt VM handles secure
#  key transactions outside of this networked App VM.
#
#  Although this file was tailor made for a Qubes OS based system, there is
#  nothing fancy about it.  This config file contains standard gpg configuration
#  directives read by the GPG configuration parser upon running of each command.
#  You may add any valid long option here on a blank line...  Command line
#  abbreviations or the leading dashes are not allowed within the config files...
#  Simply add your directive on a blank line like this with no leading dashes:
#
#         your-desired-gpg-directive directive-setting
# 
#  NOTE1: All options below are for GnuPG v2.1.11 and later and may not work
#         with earlier versions!
# 
#  NOTE2: Although this file mirrors the default_gpg.conf in the top level
#         GnuPG folder within this repository I have removed all the
#         pedigogical notes showing GnuPG defaults, obsolete, and dangerous
#         settings.  This file contains only the directives needed to implement
#         Qubes Split GPG within a networked AppVM.
#
#  Change Log: (descending chronological order)
#
#    2019-003-17 - Alisha Awen Sheppard - siren1@disroot.org
#      GnuPG V2.2 has been out for a while.  I am double checking all my
#      settings below to see if there are any new (more secure) methods to use...
#
#    2018-004-20 - Alisha Awen Sheppard - siren1@disroot.org
#      (prepaired for public use - generic)
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Default Key:
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##
# The default key to sign with. If this option is not used, the default key
# is the first key found in the secret keyring... (replace with your fingerprint)
default-key 0x00005555AAAAFFFF00005555AAAAFFFF00005555

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Algorithm and Ciphers
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##
# Compression Utilities:
personal-compress-preferences ZLIB BZIP2 ZIP

##
# List of personal cipyer preferences:
# When multiple digests are supported by all recipients, choose the strongest one.
personal-cipher-preferences AES256 CAMELLIA256 AES192 AES CAMELLIA192 TWOFISH

##
# List of personal digest preferences:
# When multiple ciphers are supported by all recipients, choose the strongest one.
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

##
# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu...
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

##
# Message digest algorithm used when signing a key:
cert-digest-algo SHA512
s2k-digest-algo SHA512
s2k-cipher-algo AES256


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## general behavior
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##
# Suppress warnings if insecure memory is used...  Do not disable this feature
# no matter how much it may annoy you.  It may save your system from a compromise!
no-secmem-warning

##
# How to Display key IDs:
# "none" omits the short ID and instead shows the key's full fingerprint on a 
# separate line.  "0xlong" displays the longer more accurate 16-char key ID.
# I choose "0xlong For practical reasons of searching keys etc., but I always
# confirm the actual "fingerprint" of someones's key before importing it!
keyid-format 0xlong

##
# Always show full fingerprints of keys List: (all keys or the specified ones)
# this helps with confirmation of keys if using a keyid-format of 0xlong above...
with-fingerprint
with-keygrip

##
# If you do not pass a recipient to gpg, it will ask for one.  Using
# this option you can encrypt to a default key.  Key validation will
# not be done in this case.  The second form uses the default key as
# default recipient.  I am not currently using either of these due
# to key validation not being done...
#default-recipient some-user-id
#default-recipient-self

# If you do not use the Latin-1 (ISO-8859-1) charset, you should tell
# GnuPG which is the native character set.  Please check the man page
# for supported character sets.  This character set is only used for
# metadata and not for the actual message which does not undergo any
# translation.  Note that future version of GnuPG will change to UTF-8
# as default character set.
#
# TODO: Find out if this needs to be set now that you are using
#       GnuPG > 2.2.x)
charset utf-8

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## keyserver Options (Still VALID)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##
#  If --auto-key-retrieve is used, and the signature being verified has a PKA
#  record, then use the PKA info to fetch the key.  This option defaults to YES!
#  I am opting to disable it here for tighter security.  I don't enable
#  --auto-key-retrieve for the same reasons...
keyserver-options no-honor-pka-record
keyserver-options no-auto-key-retrieve

##
#  Automatic key location:
#  Locate a key using that has been defined by the --kyeyserver option within
#  dirmngr.conf
auto-key-locate keyserver

## END: [Qubes-App-VM]:$HOME/.gnupg/gpg.conf - TEMPLATE
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
