#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## File:          $HOME/.gnupg/gpg.conf - TEMPLATE
## Created:       2017-004-10 
## Modified:      2022-001-18
## Author:        Alisha Awen - Siren1@disroot.org
## Copyright:     (Â© 2019 - 2022 by Alisha Awen, Siren1@disroot.org, all rights reserved)
## GitHub User:   harmonicalchemy
## Ref:           https://www.gnupg.org/software/index.html
## Repo:          https://github.com/harmonicalchemy/dotfiles.git
## Licence:       GNU General Public License v3.0
## Environment:   GnuPG Version 2 on any machine that supports it...
##                 (MacOS does not have a custom version of this either)

##               **** IMPORTANT SECURITY NOTE Q4-2019! ****
##
##    Dont use GPG < V2.2 anymore...  When it comes to security
##    all software needs to be as up to date as possible.  That rule applies
##    most importantly to any security related software!  Stay up to date!
##    Don't listen to anyone who says you can still be secure with older 
##    versions... Maybe you can, but why take such a cheap risk?
##    That is my advise... After saying that, I believe Harmonic Alchemy DOTFILES
##    will still work with GnuPG v2.1.11 and later... However, if you can upgrade
##    with out too much pain, I strongly recommend it!  You hvae been warned...

## This file represents my current best practice configuration for GnuPG V2.
## Use this as a template for any machines or VMs you configure with GPG2.

## This config file contains standard gpg configuration directives read by the
## GPG configuration parser upon running of each command... You may add any
## valid long option here on a blank line...  Command line abbreviations or the
## leading dashes are not allowed within the config files... Simply add your
## directive on a blank line like this with no leading dashes.  For Example:
##
##        your-desired-gpg-directive directive-setting

###
## NOTE1: All options below are for GnuPG v2.1.11 and later and will not
##        work with earlier versions!
##
## NOTE2: This file is to be used as a template for you to study and implement
##        within you own computing environments.  Some options listed below are
##        actually the default for GnuPG after v2.1.11 and don't need to be
##        duplicated here. I have added those directives below disabled
##        (commented out) for pedagogical purposes and added helpful comments
##        (exerpts from the manual) to give you a synopsis of what they are for.
##        Also there are notes below about settings that should never be set! 
##        This can help tremendusly later when you are digging through this code
##        worried about some security issue being discussed within a sea of
##        Reddit or Stack Overflow posts that may caused concern about something
##        you had long forgotten the details about.  Right from within this file
##        (which is probably the first place you would look, you can find the
##        item and then jump to the official docs, and release notes for
##        conformation.  It's also wize to keep up with the expert infoSec blog
##        posts as well.  Study expert hackers (i.e., DEF CON) especially if you
##        are brave enough to learn those geeky things!  Be informed!

###
## Change Log: (descending chronological order)

## 2022-001-17 - Alisha Awen - siren1@disroot.org
##     Removed some obsolete directives below because they are so old they should
##     not be used, or even considered/studied for pedagogical reasons...
##     Performed Minor changes to comments, formatting, etc.
##     Performed Security DueDiligence up to Q1 2022...

## 2021-012-26 - Alisha Awen - siren1@disroot.org
##     Minor changes to comments, formatting, etc. in prep for getting my
##     public .DOTFILES repo in sync...
##     Security DueDiligence Done up to Q4 2021...

## 2020-002-02 - Alisha Awen - siren1@disroot.org
##     Refreshed this file from changes made to my private .DOTFILES repo
##     Security DueDiligence up to Q1 2020 now...

## 2019-011-09 - Alisha Awen - siren1@disroot.org
##     Reviewed, and updated this file for posible security changes since the
##     beginning of 2019, in prep for Harmonic Alchemy DOTFILES V2.0 Q4-2019.

## 2019-003-17 - Alisha Awen - siren1@disroot.org
##     GnuPG V2.2 has been out for a while.  I am double checking all my
##     settings below to see if there are any new (more secure) methods to use...

## 2018-004-20 - Alisha Awen - siren1@disroot.org
##     (prepaired for public use - generic)
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  default key
### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
## The default key to sign with. If this option is not used, the default key
## is the first key found in the secret keyring... (replace with your fingerprint)

default-key 0x00005555AAAAFFFF00005555AAAAFFFF00005555

### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  algorithm and ciphers
### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
## Compression Utilities:

personal-compress-preferences ZLIB BZIP2 ZIP

###
## List of personal cipyer preferences:
## When multiple digests are supported by all recipients, choose the strongest one.

personal-cipher-preferences AES256 CAMELLIA256 AES192 AES CAMELLIA192 TWOFISH

###
## List of personal digest preferences:
## When multiple ciphers are supported by all recipients, choose the strongest one.

personal-digest-preferences SHA512 SHA384 SHA256 SHA224

###
## This preference list is used for new keys and becomes the default for
## "setpref" in the edit menu...

default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

###
## Message digest algorithm used when signing a key:

cert-digest-algo SHA512
s2k-digest-algo SHA512
s2k-cipher-algo AES256

###
## Select how the passphrases for symmetric encryption are mangled:
## (i.e., s2k-mode "n")...  This is an important directive!!
## If n=0 a plain passphrase (which is in general not recommended) will be used...
## If n=1 a salt (which should also not be used) is added to the passphrase...
## If n=3 No option is set (the GPG2 default).  With no option GPG iterates the
## whole process a number of times...  (See: --s2k-count)
## NOTE: s2k-mode is set to option "3" (no option) by default in GPG2. You do not
##       have to explicitly set it here.  I keep this section here (commented out)
##       for pedogical reasons only.  Read about --sk2-count for more information.

#s2k-mode 3

### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  general behavior
### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
## Get rid of the splash screen copyright notice welcome message:
## I have seen enough already ;-)
## Enable this directive if you want to see that stuff. ;-)

#no-greeting

###
## Suppress warnings if insecure memory is used...  Do not enable this feature
## no matter how much it may annoy you.  It may save your system from a compromise!
## If you are extra paranoid you could also set --require-secmem in which GPG
## will halt if it cannot get secure memory to run sensitive processes on...
##              no-secmem-warning <- DONT ENABLE THIS!
## But DO Enable require-secmen below if you are extra paranoid:

#require-secmem

###
## Disable inclusion of the version string in ASCII armored output:
## NOTE: no-emit-version is set by default in GPG2. You do not have to explicitly
##       set it here.  I keep this section here (commented out) for pedogical 
##       reasons only.  Older GnuPG best practice would require you to enable the
##       next line.  GPG2 enables it by default.

#no-emit-version

###
## Disable using a comment string in cleartext signatures and ASCII armored
## messages or keys (see --armor). I do not want meta data like this in my sigs or
## messages...
## NOTE: no-comments is set by default in GPG2. You do not have to explicitly set
##       it here.  I keep this section here (commented out) for pedogical reasons
##       only.  Older GnuPG best practice would require you to enable the next line.
##       GPG2 now enables it by default.

#no-comments

###
## How to Display key IDs:
## "none" omits the short ID and instead shows the key's full fingerprint on a 
## separate line.  "0xlong" displays the longer more accurate 16-char key ID.
## I choose "0xlong For practical reasons of searching keys etc., but I always
## confirm the actual "fingerprint" of someones's key before importing it!

keyid-format 0xlong

###
## Always show full fingerprints of keys List, (all keys or the specified ones)
## this helps with confirmation of keys if using a keyid-format of 0xlong above...

with-fingerprint
with-keygrip

###
## Display the calculated validity of user IDs during key listings:
## NOTE: "list-options show-uid-validity" is set by default in GPG2. You do not
##       have to explicitly set it here.  I keep this section here (commented out)
##       for pedogical reasons only.  Older GnuPG best practice would require you
##       to enable the next line to get this particular feature...
##       GPG2 now enables the next line by default.

#list-options show-uid-validity  

###
## Display the calculated validity of user IDs on key that issued the signature:
## NOTE: "verify-options show-uid-validity" is set by default in GPG2. You do not  
##        have to explicitly set it here.  I keep this section here (commented out)
##        for pedogical reasons only.  Older GnuPG best practice would require you
##        to enable the next line to get this particular feature...  GPG2 now
##        enables it by default.

#verify-options show-uid-validity

###
## Try to use the GnuPG-Agent:
## With this option, GnuPG first tries to connect to the agent before it asks for
## a passphrase...
## NOTE: "use-agent" is set by default in GPG2. You do not have to explicitly set
##        it here.  I keep this section here (commented out) for pedogical reasons
##        only.  Older GnuPG best practice would require you to enable the next
##        line to get this particular feature...  GPG2 now enables it by default.

#use-agent

###
## Do not merge primary user ID and primary key:
## NOTE: Since GnuPG 2.0.10, "fixed-list-mode" is always used and thus this option
##       is obsolete... If you try to set this directive here you will get an
##       error whenever you invoke GPG..  I still keep this section here
##       (commented out) for pedogical reasons only. Don't try to enable this! It
##       is only here for reference to the past...

#fixed-list-mode <- DON'T ENABLE THIS!

###
## When verifying a signature made from a subkey, ensure that the cross certification
## "back signature" on the subkey is present and valid. This protects against a subtle
## attack against subkeys that can sign...
## NOTE: "require-cross-certification" is set by default in GPG2. You do not  
##        have to explicitly set it here.  I keep this section here (commented out)
##        for pedogical reasons only.  Older GnuPG best practice would require you
##        to enable the next line to get this particular feature...  GPG2 now
##        enables it by default.

#require-cross-certification

###
## If you do not pass a recipient to gpg, it will ask for one.  Using
## this option you can encrypt to a default key.  Key validation will
## not be done in this case.  The second form uses the default key as
## default recipient.  I am not currently using either of these due
## to key validation not being done...

#default-recipient some-user-id
#default-recipient-self

###
## By default GnuPG creates version 4 signatures for data files as
## specified by OpenPGP.  Some earlier (PGP 6, PGP 7) versions of PGP
## require the older version 3 signatures.  Setting this option forces
## GnuPG to create version 3 signatures. Never use this unless you
## must do so for some backwards compatability somewhere!  And if
## you find yourself in this situation it would be much wiser to
## upgrade the system in question rather than accomodate its legacy.

#force-v3-sigs

###
## Because some mailers change lines starting with "From " to ">From "
## it is good to handle such lines in a special way when creating
## cleartext signatures; all other PGP versions do it this way too.
## To enable full OpenPGP compliance you may want to use this option.
## I choose not to comply with OpenPGP here.  I believe the GnuPG default
## is there for a good reason! (especially if GnuPG is the only dog in town
## willing to do it)

#no-escape-from-lines

###
## If you do not use the Latin-1 (ISO-8859-1) charset, you should tell GnuPG which
## is the native character set.  Please check the man page for supported character
## sets.  This character set is only used for metadata and not for the actual
## message which does not undergo any translation.  Note that future version of
## GnuPG will change to UTF-8 as default character set. This being set here
## explicitly won't change or hurt anything though...

charset utf-8

##$
##  Group Names: (multiple section)
##  NOTE: None of the options within this section are used.  If you
##        want to enable this, research thoroughly first and decide.
##
##  Group Names may be defined like this:
##     group mynames = paige 0x12345678 joe patti
##
##  Any time "mynames" is a recipient (-r or --recipient), it will be
##  expanded to the names "paige", "joe", and "patti", and the key ID
##  "0x12345678".  Note there is only one level of expansion - you
##  cannot make a group that points to another group.  Note also that
##  if there are spaces in the recipient name, this will appear as two
##  recipients.  In these cases it is better to use the key ID:
##
##    group mynames = paige 0x12345678 joe patti
##
##  Some old Windows platforms require 8.3 filenames.  If your system
##  can handle long filenames, uncomment the next line:

#no-mangle-dos-filenames

##  Lock the file only once for the lifetime of a process:  
##  If you do not define this, the lock will be obtained and released every time
##  it is needed - normally this is not needed.

#lock-once

##  Uncomment this line to display photo user IDs in key listings and when a
##  signature from a key with a photo is verified:

#show-photos

###
##  Use this program to display photo user IDs:
##
##  %i is expanded to a temporary file that contains the photo.
##  %I is the same as %i, but the file isn't deleted afterwards by GnuPG.
##  %k is expanded to the key ID of the key.
##  %K is expanded to the long OpenPGP key ID of the key.
##  %t is expanded to the extension of the image (e.g. "jpg").
##  %T is expanded to the MIME type of the image (e.g. "image/jpeg").
##  %f is expanded to the fingerprint of the key.
##  %% is %, of course.

##  If %i or %I are not present, then the photo is supplied to the
##  viewer on standard input.  If your platform supports it, standard
##  input is the best way to do this as it avoids the time and effort in
##  generating and then cleaning up a secure temp file.

##  The default program is "xloadimage -fork -quiet -title 'KeyID 0x%k' stdin"
##  On Mac OS X and Windows, the default is to use your regular JPEG image
##  viewer.

##  Some other viewers:
##  photo-viewer "qiv %i"
##  photo-viewer "ee %i"
##  photo-viewer "display -title 'KeyID 0x%k'"

##  This one saves a copy of the photo ID in your home directory:
##  photo-viewer "cat > ~/photoid-for-key-%k.%t"
##
##  Use your MIME handler to view photos:
##  photo-viewer "metamail -q -d -b -c %T -s 'KeyID 0x%k' -f GnuPG"

### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  Keyserver Options: (default, obsolete, not-used, or disabled)
### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
##  --keyserver This option is deprecated - please use the --keyserver
##  in dirmngr.conf instead.  This depreciated option specifys the server
##  that --recv-keys, --send-keys, and --search-keys will communicate with
##  to receive, send, and search for keys...
##
##  NOTE: Do not set this option here anymore!  Set it in dirmngr.conf
##        instead (after GnuPG V2)... 

#keyserver hkps://hkps.pool.sks-keyservers.net <--DON'T Do this in gpg.conf post V.2!

###
##  Don't leak DNS, see https://trac.torproject.org/projects/tor/ticket/2846
##  This option no longer exists in GPG2, but Miroslav Rovis *thinks* that if
##  you really want to, you can disable SRV lookups by explicitly specifying a
##  port number when setting the keyserver in dirmngr.conf, as in:
##     keyserver hkps.pool.sks-keyservers.net:443

#keyserver-options no-try-dns-srv <-- DON'T Set this it is obsolete!

##$
##  When using --refresh-keys, if the key in question has a preferred keyserver
##  URL, then disable use of that preferred keyserver to refresh the key.
##
##  This is useful because:
##
##   (1) it prevents someone from designating an insecure method
##       for pulling their key.
##
##   (2) if the server designated uses hkps, the refresh will fail because
##       the ca-cert will not match, so the keys will never be refreshed.
##
##  Note: An attacker could designate a keyserver that they control to monitor
##        when or from where you refresh their key.
##
## NOTE: no-honor-keyserver-url is set (no-) by default in GPG2. You do not have to
## explicitly set it here.  I keep this section here (commented out) for pedogical
## reasons only.  Older GnuPG best practice would require you to enable the next line
##                to prevent the "web bug" mentioned above...
## GPG2 sets the following by default.

#keyserver-options no-honor-keyserver-url

### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  VALID and important keyserver Options:
### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
##  --honor-pka-record:
##  If --auto-key-retrieve is used (an obsolete feature now), and the signature 
##  being verified has a PKA record, then use the PKA info to fetch the key.
##  This is the default enabled option for GPG2!  I am opting to disable it here 
##  for tighter security.

#keyserver-options no-auto-key-retrieve
keyserver-options no-honor-pka-record

###
##  Automatic key location:
##  Locate a key using that has been defined by the --kyeyserver option within
##  dirmngr.conf

auto-key-locate keyserver

#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## END $HOME/.gnupg/gpg.conf - TEMPLATE
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
