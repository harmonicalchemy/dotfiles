#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## File:          $HOME/.gnupg/dirmngr.conf - TEMPLATE
## Created:       2017-004-10
## Modified:      2022-001-18
## Author:        Alisha Awen - Siren1disroot.org
## Copyright:     (© 2019 - 2022 by Alisha Awen, Siren1@disroot.org, all rights reserved)
## Git Username:  harmonicalchemy
## Ref:           https://www.gnupg.org/software/index.html
## Repo:          https://github.com/harmonicalchemy/dotfiles.git
## Licence:       GNU General Public License v3.0
## Environment:   GnuPG Version 2.1.11+ on any machine that supports it...
##                 (MacOS does not have a custom version of this either)

##               **** IMPORTANT SECURITY NOTE Q4-2019! ****
##
##    Dont use GPG < V2.2 anymore...  When it comes to security
##    all software needs to be as up to date as possible.  That rule applies
##    most importantly to any security related software!  Stay up to date!
##    Don't listen to anyone who says you can still be secure with older 
##    versions... Maybe you can, but why take such a cheap risk?
##    That is my advise... After saying that, I believe Harmonic Alchemy DOTFILES
##    will still work with GnuPG v2.1.11 and later... However, if you can upgrade
##    with out too much pain, I strongly recommend it!  You hvae been warned...

## This file represents my current best practice configuration for GnuPG,
## Use this as a template for any machines or VMs you configure with GPG2.

## NOTE: This file only works with GPG2. dirmngr did not exist before GnuPG 2...
## Unless you specify which option file to use (with the command line option
## "--options filename"), the file ~/.gnupg/dirmngr.conf is sourced by dirmngr.
## This file may contain any long options which are valid for Dirmngr.

###
## Change Log: (descending chronological order)

## 2022-001-18 - Alisha Awen - siren1@disroot.org
##     New Keyserver changes... No longer using any hkp servers that have
##     been suffering from malicious stuff (for a long time omg!)

## 2021-012-26 - Alisha Awen - siren1@disroot.org
##     Minor changes to comments, formatting, etc... Brought up to date in sync
##     with my private DOTFILES version of this file...
##     Security DueDiligence up to Q4 2021 now...

## 2020-002-02 - Alisha Awen - siren1@disroot.org
##      Refreshed this file from changes made to my private .DOTFILES repo
##      Security DueDiligence up to Q1 2020 now...

## 2019-011-09 - Alisha Awen - siren1@disroot.org
##      Reviewed, and updated this file for posible security changes since the
##      beginning of 2019, in prep for Harmonic Alchemy DOTFILES V2.0 Q4-2019.

## 2019-003-17 - Alisha Awen - siren1@disroot.org
##     GnuPG V2.2 has been out for a while.  I am double checking all my
##     settings below to see if there are any new (more secure) methods to use...

## 2018-004-20 - Alisha Awen - siren1@disroot.org
##     (prepaired for public use - generic)
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  Keyserver Configurations
### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
## GPG can send and receive keys to and from a keyserver.  These
## servers can be HKP, Email, or LDAP (if GnuPG is built with LDAP
## support).
##
## 2022 UPDATE:
##  There’s a new keyserver in town: https://gitlab.com/hagrid-keyserver/hagrid/
##  The Hagrid (“keeper of keys”) is an open source verifying keyserver software
##  project, implemented in Rust, which is designed to be resistant to the abuse
##  and privacy issues that plague SKS. Three prominent software projects in the
##  PGP ecosystem (Sequoia-PGP, OpenKeychain, and Enigmail) collectively run the
##  Hagrid server keys.openpgp.org. YAY!!! finally... omg!

## I DON'T use any of the older examples below!!! I left them in for historical
## purposes only... See actual REAL recommended settings just above the actual
## directive setting...

### These examples are old... do not use...
## Example HKP keyservers:
##      hkp://keys.gnupg.net

## Example HKP keyserver using a Tor OnionBalance service
##      hkp://jirk5u4osbsr34t5.onion

## Example HKPS keyservers (see --hkp-cacert below):
##       hkps://hkps.pool.sks-keyservers.net

## Example LDAP keyservers:
##      ldap://pgp.surfnet.nl:11370

## Regular URL syntax applies, and you can set an alternate port
## through the usual method:
##      hkp://keyserver.example.net:22742

## Most users just set the name and type of their preferred keyserver.
## Note that most servers (with the notable exception of
## ldap://keyserver.pgp.com) synchronize changes with each other.
## Note also that a single server name may actually point to multiple
## servers via DNS round-robin.  hkp://keys.gnupg.net is an example of
## such a "server", which spreads the load over a number of physical
## servers.

## If exactly two keyservers are configured and only one is a Tor hidden
## service, Dirmngr selects the keyserver to use depending on whether
## Tor is locally running or not (on a per session base).

### Examples Updated for 2022:
##
##        1. (for normal operations)
##   keyserver hkps://keys.openpgp.org
##
##        2. (for TOR) (you must have TOR configured and running on your
##           setup for this to work)
##   keyserver hkp://zkaan2xfbuxia2wpf7ofnkbz6r5zdbbvxbunvp5g2iebopbfc4iqmbad.onion

keyserver hkps://keys.openpgp.org

###
## Log File - Where you can verify actions/events or investigate anomalies...

log-file ~/.gnupg/dirmngr.log

###
## Output additional information while running. (disable this if things are fine)

verbose

###
## Use one of the followig for debugging as needed... (see Werner's note in header)
## $>info dirmngr commands (for more info)
##debug-level none
##debug-level basic
##debug-level advanced
##debug-level expert
##debug-level guru

###
## Do not allow OCSP support if requested by client:
## NOTE: this is the default Dirmngr setting because if enabled, it could violate the
## privacy of the user; for example it is possible to track the time when a user is
## reading a mail.
## NOTE: Don't try setting this even to disable it! Dirmngr complains and won't start!
##no-allow-ocsp

###
## --hkp-cacert FILENAME
## For the "hkps" scheme (keyserver access over TLS), Dirmngr needs to
## know the root certificates for verification of the TLS certificates
## used for the connection.  Enter the full name of a file with the
## root certificates here.  If that file is in PEM format a ".pem"
## suffix is expected.  This option may be given multiple times to add
## more root certificates.  Tilde expansion is supported.

## NOTE: I believe this directive is also no longer requried
## since gnupg V2.1.11...  When I set it here I experienced problems
## reaching the servers! (host not found)
## The CA certificate for hkps.pool.sks-keyservers.net is probably
## located somewhere else by default (possibly in a remote git repo)

## Then I discovered this message from Miroslav Rovis on the gnupg lists:
## https://lists.gnupg.org/pipermail/gnupg-users/2017-March/057893.html
## Digest: "If you're using the sks-keyservers.net pool you no longer need
## to provide GnuPG with the CA certificate file, as it is now bundled with
## GnuPG (>= 2.1.11) and automatically used when needed.
## (And with GnuPG >= 2.1.16 you will no longer even need to explicity set
## the keyserver option, as hkps.pool.sks-keyservers.net is already the default.

## Therefore I have disabled the option below pointing to where
## I keep the CA locally... Now everything works as expected... ;-)
## Again... your milage may vary...
#hkp-cacert ~/.gnupg/trusted-certs/sks-keyservers.netCA.pem

#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## END $HOME/.gnupg/dirmngr.conf - TEMPLATE
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
