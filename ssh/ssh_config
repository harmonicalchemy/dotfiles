# -*- mode: ssh-config -*-
##### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## File:          /etc/ssh/ssh_config - TEMPLATE
##                Default System Wide client SSH Configurations...
## Created:       2018-003-02
## Updated:       2022-001-17
## Author:        Alisha Awen - siren1@disroot.org
## GitHub User:   harmonicalchemy
## Release:       https://www.openssh.com/releasenotes.html
## Ref:           https://www.openssh.com/manual.html
## Spec Sheet:    https://www.openssh.com/specs.html
## Repo:          GitHub.com:harmonicalchemy/dotfiles.git
## Environment:   Any machine that supports Open SSH      (be wise and update!)

## This example ssh_config may be used as your system wide SSH config file on
## any unix/bsd/Linux compatible OS you need to build on a PC for local
## development, etc... Where you have multiple user accounts all using the same
## preferred DEFAULT settings...

##            *** OpenSSH CURRENT STATUS Q1-2022 ***
##
## See: https://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/ChangeLog
## The latest version of OpenSSH: 8.8/8.8p1 was released on 2021-09-26. 
## Read the release file here: https://www.openssh.com/txt/release-8.1
## This release is generably availble from various package managers.
## It's Always Time to UPDATE your security infrastructure & tools!!!
## Don't be lazy when it comes to infoSec!  "It's like a Jungle Sometimes,
## It makes me wonder how I keep from going under!  Ah-huh-huh-huh-huh" -GMF

## NOTE:
##    If you are using SSH on a personal machine with only ONE user use:
##    the example $HOME/.ssh/config - TEMPLATE for that single user accont
##    and don't install this one in: /etc/ssh/ssh_config.  the SSH config
##    Template also found within this repository contains a generic HOST
##    section within it already in place...  (with same settings as below)
##    in the case of a single user machine you don't need to bother with
##    configuring a systgem wide /etc/ssh/ssh_config file...
##    If this file does in fact exist within /etc/ssh all the settings will
##    in fact be overridden by the individual users $HOME/.ssh/config files
##    so no harm done...

## The OpenSSH configuration parsor takes the first value for any
## directive it finds: (first: from the command line, second: from local
## $HOME/.ssh/config, and third: from this system wide /etc/ssh/ssh_config file
## which is used by ALL local user accounts intended for the OS your are building.

## If the configuration parsor finds a duplicate keyword configuration directive
## set here system wide, it will ignore it... Keep this in mind when you use
## these examples to set up your own configurations.

## As of Q1-2022 the algorithms set below are still the strongest. They don't
## depend on any suspicious Government tweaks, constants, etc. that can 
## compromise the integrity of your OpenSSH configuration...
##### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## BEGIN Default Generic Host Section:
##
## NOTE: Connection to my own VPS machines is set to as narrow and secure attack
## surface as possible.  The default settings below reflect this strict nature.
## Connection to other services may require overrides within respective HOST
## sections of individual users ~/.ssh/config files in order to negotiate a
## matching configuration with those services. Specific HOST sections are NOT
## set within this system wide /etc/ssh/ssh_config file...

HOST *

  ## ALWAYS Use the stronger protocol 2! By now this is most probably the default
  ## for latest versions of OPEN SSH... Setting it here is not a bad thing though.  

  Protocol 2

  ## Enable Public Key Authentication...

  PubkeyAuthentication yes

  ## Key eXchange Algorithms: (Kex)
  ## Limit Key Exchange to: curve22519-sha256 only within this default HOST *
  ## section...

  KexAlgorithms curve25519-sha256@libssh.org

  ## Host Key Algorithms:
  ## Limit HostKeyAlgorithms to: ssh-ed25519 only within this default HOST *
  ## section... To date this algo is strongest...

  HostKeyAlgorithms ssh-ed25519

  ## Cyphers:
  ## Limit Cyphers to: chacha20-poly1305@openssh.com only within this default
  ## HOST * section...

  Ciphers  chacha20-poly1305@openssh.com

  ## Message Authentication Codes (MACs):
  ## Limit MACs to: hmac-sha2-512 only within this default HOST * section...

  MACs  hmac-sha2-512

  ## IdentitiesOnly:

  IdentitiesOnly yes

  ## Challenge Response Authentication:
  ## Enable Challenge Response Authentication only if you need to use One Time
  ## Password (OTP), or Timed One Time Password (TOPT), e.g., yubikey, google auth,
  ## etc.

  ChallengeResponseAuthentication no

  ## General SSH configurations for tuning performance etc...

  ServerAliveInterval 60
  ServerAliveCountMax 30
    
  ## Display randomâ€”ASCII-art representation of remote host key fingerprint at
  ## login & for unknown host keys to make it easier to recognize...
  ## Enable this if you think it will help you verify host you are trying to
  ## connect to...  It would be better if the images were a real graphic rather
  ## than ASCII art which is almost as difficult as recognizing the code itself.
  ## "Security at the expense of usability comes at the expense of security..."

  VisualHostKey yes

  ## Hash names & addresses within ~/.ssh/known_hosts so they can only be read by
  ## ssh & sshd, (no 3rd parties can read)

  HashKnownHosts yes

  ###
  ## The rest of these should all be disabled...  They may be depreciated as well.
  ## Use the -v (verbose) option when you connect to find out.  if you see a line
  ## saying the option is depreciated, you can remove it from here to get rid of
  ## that message.  UseRoaming has been depreciated since OpenSSH V7.0.  I keep it
  ## here for historical reference only...

  ## UseRoaming no
  PasswordAuthentication no
  ForwardAgent no
  ForwardX11 no

## END Default Generic Host Section:
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## END /etc/ssh/ssh_config
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
