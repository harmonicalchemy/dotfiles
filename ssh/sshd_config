# -*- mode: ssh-config -*-
##### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## File:          /etc/ssh/sshd_config - TEMPLATE
##                SSH Server Daemon Configurations
## Created:       2018-003-11
## Updated:       2022-001-17
## Author:        Alisha Awen - siren1@disroot.org
## GitHub User:   harmonicalchemy
## Release:       https://www.openssh.com/releasenotes.html
## Ref:           https://www.openssh.com/manual.html
## Spec Sheet:    https://www.openssh.com/specs.html
## Repo:          GitHub.com:harmonicalchemy/dotfiles.git
## Environment:   Any up-to-date bare metal Server or VPS that supports Open SSH
##                and needs to accept incomming SSH connection requests... 

## This is the Master SSH Daemon configuration file TEMPLATE for hosted apps,  
## web & media services, email servers, git servers, you name it... i.e. any
## machine you manage that needs to accept incomming SSH connection requests...

##            *** OpenSSH CURRENT STATUS Q1-2022 ***
##
## See: https://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/ChangeLog
## The latest version of OpenSSH: 8.8/8.8p1 was released on 2021-09-26. 
## Read the release file here: https://www.openssh.com/txt/release-8.1
## This release is generably availble from various package managers.
## It's Always Time to UPDATE your security infrastructure & tools!!!
## Don't be lazy when it comes to infoSec!  "It's like a Jungle Sometimes,
## It makes me wonder how I keep from going under!  Ah-huh-huh-huh-huh" -GMF

## ~~~~~~~~~~~~~~~~~~
## NOTE:
#f  I have added more configurations to this file on my servers to increase
##  security hardening... I may add those here in this template later...
##  However I have not included them here in this public repo because it
##  may expose my meta data to profiling bad actors!!!

## ~~~~~~~~~~~~~~~~~~
## UPDATE: 2022-001-17
## The configurations below were tested on Ubuntu 16.04 (with latest up-to-date
## SSH packages installed)
## All settings below have been updated for Q1-2022...

## I will be testing and adjusting this on various other hosted platforms
## and will document the results within the Docs folder of this repository...

## Example Use-Case: Use this template to help with SSH tasks while provisioning
## a new droplet on Digital Ocean or other similar VPS infrastructure hosting
## provider. Good for setting up your back end Dev channels for a considerably
## more secure web site project... and/or git server, or TLS CA, or anything ;-)
## All settings below have been updated for Q1-2022...

## ~~~~~~~~~~~~~~~~~~
## UPDATE: Q4-2019
## The following algorithms were still the strongest. They don't
## depend on any suspicious Government tweaks, constants, etc. that can 
## compromise the integrity of your OpenSSH configuration...
## All settings below have been updated for Q1-2020...

## Cyphers, Algorighms, key-exchange, etc...
##
## Use ED25519 if at all possible, and when you cant, fall back on
## the traditional RSA 4096 method alone...
##                 DON'T USE ANY ECDSA CURVE KEYS!!!

## Just Use Curve25519 and save your self a lot of pain, bait/switch, oops!
## moments... You will get this cloak and dagger game soon enough...
## All settings below have been updated for Q1-2020...
##### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###
## ALWAYS Use the stronger protocol 2! By now this is most probably the default
## for latest versions of OPEN SSH... Setting it here is not a bad thing though.

Protocol 2

## Enable public key authentication... This is the safest way... 

PubkeyAuthentication yes

###
## Server Host Keys:
##  Note: Add host keys to user specific host sections
##  in ~/.ssh/config rather than here... Most likely you will
##  have at least one key for each different service you use...
##  This assumes you are following a more secure compartmentalizaton scheme...
##  Enable ONLY the single Server Host Key listed below for default operations:

HostKey /etc/ssh/ssh_host_ed25519_key

## If you absolutely cannot use the above key for something, then only enable
## this second older option. (provided you created this key with the strongest
## options... and it is strictly a 4096 key...

#HostKey /etc/ssh/ssh_host_rsa_key

###
## IdentitiesOnly:
##  Set this to yes so that only the ID specified above will be used...
##  ssh-agent may have others in memory, however I am also tuning my
##  server to only load a single key into memory and sticking with the
##  one that works... The rest will be safely stored in a keepass db,
##  and only exported and loaded into the ssh-agent if needed... They
##  are shreaded/deleted immediately after I am done using them...
##  Good management of server host keys is critical and paramont!!!

IdentitiesOnly yes

###
## Key eXchange Algorithms: (Kex)
## Limit Key Exchange to: curve22519-sha256 only for this server...

KexAlgorithms curve25519-sha256@libssh.org

###
## HostKeyAlgotithms:
##   Limit Default Host Key algorithms to ssh-ed22519 for this server...
##   To date this algo is strongest...

HostKeyAlgorithms ssh-ed25519

###
## Cyphers:
##   Since I am the only one connecting to my servers, I am limiting this list to
##   the single: chacha20-poly1305 cipher... Which is the strongest to date...

Ciphers chacha20-poly1305@openssh.com

###
## Message Authentication Codes (MACs):
## This one is the strongest you can choose so use it on your servers...

MACs hmac-sha2-512

###
## Disable password authentication... The ultimate first step!
## WARNING: Donâ€™t enable this until you have a working SSH keypair all set up
## and ready with its public key set within your host's allowed list. DOH! %~)

#PasswordAuthentication no

###
## Enable this next option (i.e. to "yes") only if you need to use One Time
## Password (OTP), or Timed One Time Password (TOPT), e.g., yubikey, google
## auth, etc.  

ChallengeResponseAuthentication no

#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## END: /etc/ssh/sshd_config - TEMPLATE
#### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
