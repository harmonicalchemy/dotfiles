## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  File:          $HOME/.gnupg/gpg-agent.conf - TEMPLATE
#  Created:       2017-004-10 
#  Version:       V1.0 RC2  [Q1-2019]
#  Author:        Alisha Awen Sheppard - Siren1@disroot.org
#  Git Username:  harmonicalchemy
#  Ref:           https://www.gnupg.org/software/index.html
#  Repo:          Github.com:harmonicalchemy/dotfiles.git
#  Environment:   GnuPG Version 2 on Mac OS only
# 
#  This is my default gpg-agent.conf for OS X only...
# 
#  This is the standard configuration file read by gpg-agent on startup.
#  You may add any valid long option here on a blank line...
#  Command abbreviations or the leading dashes are not allowed...
#  Simpley add: your-desired-gpg-agent-option-like-this
# 
#  This file is also read after a SIGHUP however only a few options will
#  actually have an effect.
# 
#  NOTE:  All options below are for GnuPG v2.1.11 and later...
# 
#  NOTE: Many options set explicitly below are actually the default for
#  GnuPG v2.1.11 and later...  I set them here in order to explicitly show
#  my global best practice configuration for GnuPG (including defaults)
#
#  Change Log: (descending chronological order)
#
#    2019-003-17 - Alisha Awen Sheppard - siren1@disroot.org
#      GnuPG V2.2 has been out for a while.  I am double checking all my
#      settings below to see if there are any new (more secure) methods to use...
#
#    2018-002-26 - Alisha Awen Sheppard - siren1@disroot.org
#      Updated this file to use my new 2018 GPG sub-keys...
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##
# Enable gpg-agent support for SSH:
# In this mode of operation, the agent does not only implement the gpg-agent
# protocol, but also the agent protocol used by OpenSSH (through a separate
# socket).  Consequently, it's possible to use the gpg-agent as a drop-in
# replacement for the well known ssh-agent.
# An SSH authentication sub Key will be used through the agent.  This needs to be
# added to gpg-agent initially through the ssh-add utility. When the subkey is
# added, ssh-add, the agent will ask for the password of the provided key file 
# and send the unprotected key material to the agent...
# This causes gpg-agent to ask for a passphrase, which is to be used for
# encrypting the newly received key and storing it in a gpg-agent specific
# directory.
# More help and discussion about using SSH with GPG here:
#   https://wiki.archlinux.org/index.php/GnuPG#SSH_agent
# and here:
#   https://www.unix-ag.uni-kl.de/~guenther/gpg-agent-for-ssh.html
enable-ssh-support

##
# Use GUI dialog for Pin Entry (Setting below is for Mac OS X)...
# The default for this setting is installation dependent. The default
# configuration name of the default pinentry is "pinentry"...
# if that file does not exist but a pinentry-basic exist the latter is used. 
# For other unix flavors, you will have to search for the best option...
pinentry-program /usr/local/bin/pinentry-mac
# Use Console for Pin Entry (currently disabled but if not set above, this is
# the default)  
#pinentry-program /usr/local/bin/pinentry

##
# Keep the display information in memory...  This option directs gpg-agent to
# ignore requests to change the current tty or X window system’s DISPLAY variable
# respectively.  This prevents gpg from occasionally failing with “file not found”
# errors by locking the pinentry to pop up at the tty or display where you started
# the agent.
keep-display

##
# Set the time a cache entry is valid to n seconds...
# The default is 600 seconds. Each time a cache entry is accessed, the entry’s
# timer is reset.  To set an entry’s maximum lifetime, use max-cache-ttl.
default-cache-ttl 600

##
# Set the maximum time a cache entry is valid to n seconds...
# After this time a cache entry will be expired even if it has been accessed recently
# or has been set using gpg-preset-passphrase. The default is 2 hours (7200 seconds). 
max-cache-ttl 7200

##
# Set the time a cache entry used for SSH keys is valid to n seconds...
# The default is 1800 seconds. Each time a cache entry is accessed, the entry’s
# timer is reset.  To set an entry’s maximum lifetime, use max-cache-ttl-ssh.
default-cache-ttl-ssh 1800

##
# Set the maximum time a cache entry used for SSH keys is valid to n seconds...
# After this time a cache entry will be expired even if it has been accessed
# recently or has been set using gpg-preset-passphrase. The default is 2 hours
# (7200 seconds).
max-cache-ttl-ssh 7200

##
# This option allows the use of gpg-preset-passphrase to seed the internal
# cache of gpg-agent with passphrases.
allow-preset-passphrase

##
# FYI - These Are Outdated Options as of v2.1.11
# Never Enable any of these settings!
# If you read about it somewhere, the doc is way old!  Forget it...
#write-env-file
# Since GnuPG 2.1 the standard socket is always used, therefore this option
# has no effect.
#use-standard-socket

#  END $HOME/.gnupg/gpg-agent.conf
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

