# -*- mode: conf -*-
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-
#  File:          $HOME/.gnupg/sshcontrol - TEMPLATE
#                 List of PGP keys allowed for SSH use...
#  Created:       2017-004-10 
#  Author:        Alisha Awen Sheppard
#  Git Username:  harmonicalchemy
#  Ref:           gnupg.org/documentation/manuals/gnupg/Agent-Configuration.html
#  Repo:          Github.com:harmonicalchemy/dotfiles.git
#  Environment:   GnuPG Version 2 on Mac OS only
#
#  This file is used when support for the secure shell agent protocol has been
#  enabled (see option --enable-ssh-support in gpg-agent.conf). Only keys present
#  within this file are used in the SSH protocol. (keys witin key-cards will also
#  be used within SSH protocol if you are also using a key card)...
#
#  The ssh-add tool may be used to add new entries to this file; you may also add
#  them manually below.  Comment lines, indicated by a leading hash mark, as well
#  as empty lines are ignored. 
#
#  The only flag support is confirm. If this flag is found for a key, each use of
#  the key will pop up a pinentry to confirm the use of that key. The flag is
#  automatically set if a new key was loaded into gpg-agent using the option -c
#  of the ssh-add command.
#
#  The keygrip may be prefixed with a ! to disable an entry. (as shown below)
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-

##
# List of allowed ssh keys:
# The example keys below have been added manually...
# Manual entries start with optional white spaces, followed by the keygrip of
# the key given as 40 hex digits, optionally followed by a caching TTL in seconds,
# and another optional field for arbitrary flags.  Prepend the keygrip with an '!'
# mark to disable it... A non-zero TTL overrides the global default as set by
# --default-cache-ttl-ssh within gpt-agent.conf...
#
# 1. Authentication subkey keygrip:
00005555AAAAFFFF00005555AAAAFFFF00005555
# 2. (add keys as needed)
!5555AAAAFFFF00005555AAAAFFFF00005555AAAA
# 3. (add keys as needed)
!AAAAFFFF00005555AAAAFFFF00005555AAAAFFFF
# 4. (etc...)
!FFFF00005555AAAAFFFF00005555AAAAFFFF0000
