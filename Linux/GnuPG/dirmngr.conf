##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## ~/.gnupg/dirmngr.conf - Template
## Options for Dirmngr running on MacOS and Linux, & possibly Windows but I have
## no idea about MS Windows anymore... ;-)
## Last Modified:  2018-004-19 - Alisha Awen, siren1@disroot.org
##
## This file represents my current best practice configuration for GnuPG, v2.2+
## (and should also work with prior versions of GnuPG after v2.1.11)
##
## NOTE: This file only works with GPG2 of course... it did not exist before...
## Unless you specify which option file to use (with the command line option
## "--options filename"), the file ~/.gnupg/dirmngr.conf is used by dirmngr.
## This file may contain any long options which are valid for Dirmngr.
##
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## IMPORTANT NOTE: Dirmngr now supports hkps out of box!
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## See the following message from Werner Koch for tips:
##
##     https://lists.gnupg.org/pipermail/gnupg-devel/2014-May/028445.html
## 
## NOTE: Many options set explicitly below are actually the default for
## GnuPG v2.11+ which fixes a bunch of things mentioned below by default.
## I set these "defaults" explicitly below anyway for pedagogical purposes
## only and also added some comments below discussing obsolete things that
## should not be set.  This souce of truth embedded within the comments of this
## config file will provide me with a quick reference (when troubleshooting) and
## help to make the correct GnuPG security decisions on-going in spite of
## the confusing day-to-day sea of reddit or Stack Overflow posts that may be
## cause for concern about some particular security setting... (long after I set
## originally set the directive below and forgot why... Doing it this way helps
## to frame one's reference for further investigation... Obviously you should
## also constult the Official GnuPG docs, and read the expert's blogs as well...
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Keyserver Configurations
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# GPG can send and receive keys to and from a keyserver.  These
# servers can be HKP, Email, or LDAP (if GnuPG is built with LDAP
# support).

# Example HKP keyservers:
#      hkp://keys.gnupg.net

# Example HKP keyserver using a Tor OnionBalance service
#      hkp://jirk5u4osbsr34t5.onion

# Example HKPS keyservers (see --hkp-cacert below):
#       hkps://hkps.pool.sks-keyservers.net

# Example LDAP keyservers:
#      ldap://pgp.surfnet.nl:11370

# Regular URL syntax applies, and you can set an alternate port
# through the usual method:
#      hkp://keyserver.example.net:22742

# Most users just set the name and type of their preferred keyserver.
# Note that most servers (with the notable exception of
# ldap://keyserver.pgp.com) synchronize changes with each other.  Note
# also that a single server name may actually point to multiple
# servers via DNS round-robin.  hkp://keys.gnupg.net is an example of
# such a "server", which spreads the load over a number of physical
# servers.

# If exactly two keyservers are configured and only one is a Tor hidden
# service, Dirmngr selects the keyserver to use depending on whether
# Tor is locally running or not (on a per session base).

# Alisha's Keyserver URIs (1) for Tor, (2) for hkps:
# NOTE: This is Now Obsolete! Everything is automatic now... See Werner
# Koch's note in file header above...

# NOTE: For GnuPG 2.1+ hkps.pool.sks-keyservers.net is supposed to be the default
# when nothing is set here and that worked for a while.  Now with GnuPG v2.2 the
# message no path to server returns if you don't specify --keyserver on command.
# So I have re-enabled the keyserver option below...
#keyserver hkp://jirk5u4osbsr34t5.onion
keyserver hkps://hkps.pool.sks-keyservers.net
#keyserver hkp://keys.gnupg.net

# Log File - Where you can verify actions/events or investigate anomalies...
log-file ~/.gnupg/dirmngr.log

# Output additional information while running. (disable this if things are fine)
verbose

# Use one of the followig for debugging as needed... (see Werner's note in header)
# $>info dirmngr commands (for more info)
#debug-level none
#debug-level basic
#debug-level advanced
#debug-level expert
#debug-level guru

# Do not allow OCSP support if requested by client:
# NOTE: this is the default Dirmngr setting because if enabled, it could violate the
# privacy of the user; for example it is possible to track the time when a user is
# reading a mail.
# NOTE: Don't try setting this even to disable it! Dirmngr complains and won't start!
#no-allow-ocsp

# --hkp-cacert FILENAME
# For the "hkps" scheme (keyserver access over TLS), Dirmngr needs to
# know the root certificates for verification of the TLS certificates
# used for the connection.  Enter the full name of a file with the
# root certificates here.  If that file is in PEM format a ".pem"
# suffix is expected.  This option may be given multiple times to add
# more root certificates.  Tilde expansion is supported.
# 
# MWM-NOTE: I believe this directive is also no longer requried
# since gnupg V2.1.11...  When I set it here I experienced problems
# reaching the servers! (host not found)
# The CA certificate for hkps.pool.sks-keyservers.net is probably
# located somewhere else by default (possibly in a remote git repo)
#
# Then I discovered this message from Miroslav Rovis on the gnupg lists:
# https://lists.gnupg.org/pipermail/gnupg-users/2017-March/057893.html
# Digest: "If you're using the sks-keyservers.net pool you no longer need
# to provide GnuPG with the CA certificate file, as it is now bundled with
# GnuPG (>= 2.1.11) and automatically used when needed.
# (And with GnuPG >= 2.1.16 you will no longer even need to explicity set
# the keyserver option, as hkps.pool.sks-keyservers.net is already the default.
#
# Therefore I have disabled the option below pointing to where
# I keep the CA locally... Now everything works as expected... ;-)
#hkp-cacert ~/.gnupg/trusted-certs/sks-keyservers.netCA.pem

# END ~/.gnupg/dirmngr.conf - Template
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
